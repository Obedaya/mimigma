services:
  frontend:
    build: ./frontend
    ports:
      - 8080:8080
    volumes:
      - ./frontend:/app
      - /app/node_modules
    env_file:
      - .env
    networks:
      the-enigma-network:
        aliases:
          - frontend
          - enigma-frontend


  backend:
    build: ./backend
    ports:
      - 9000:9000
    environment:
      - DATABASE_URL=postgresql://db_user:db_pass@db/enigma_db
    depends_on:
      - db
    networks:
      the-enigma-network:
        aliases:
        - backend
        - enigma-backend
  db:
    image: postgres:alpine
    environment:
      - POSTGRES_USER=db_user
      - POSTGRES_PASSWORD=db_pass
      - POSTGRES_DB=enigma_db
    networks:
      the-enigma-network:
        aliases:
          - db
          - enigma-db

  cypress:
    build:
      context: ./frontend
      dockerfile: Cypress.Dockerfile
    depends_on:
      - frontend
    environment:
      - CYPRESS_baseUrl=http://frontend:8080
    volumes:
      #      - ./frontend/cypress:/e2e/cypress
    profiles:
      - testing
    entrypoint: [ "bun", "cypress", "run" ]
    networks:
      the-enigma-network:
        aliases:
          - cypress
          - enigma-cypress

  test:
    build: ./backend
    volumes:
      - ./backend/app:/code/app  # Mount to reflect changes in tests immediately
    command: sh -c 'sleep 3 && pytest -s /code/app/user_tests.py'
    depends_on:
      - backend
      - db
    environment:
      - SQLALCHEMY_SILENCE_UBER_WARNING=1  # Silence SQLAlchemy 2.0 compatibility warning
    networks:
      the-enigma-network:
        aliases:
          - test

networks:
  the-enigma-network:
    driver: bridge
