services:
  frontend:
    build: ./frontend
    ports:
      - 8081:8080
#    volumes:
#      - ./frontend:/app
#      - /app/node_modules
    env_file:
      - .env
    networks:
      - mimigma_network

  backend:
    build: ./backend
    ports:
      - 9000:9000
    environment:
      - DATABASE_URL=postgresql://db_user:db_pass@db/enigma_db
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail http://localhost:9000/ || exit 1" ]
      interval: 5s
      timeout: 5s
      retries: 3
    networks:
      - mimigma_network

  db:
    image: postgres:alpine
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U db_user -d enigma_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=db_user
      - POSTGRES_PASSWORD=db_pass
      - POSTGRES_DB=enigma_db
    networks:
      - mimigma_network

  cypress:
    build:
      context: ./frontend
      dockerfile: Cypress.Dockerfile
    depends_on:
      backend:
        condition: service_healthy
    environment:
      - CYPRESS_baseUrl=http://frontend:8080
#    volumes:
#      - ./frontend/cypress:/app/cypress
    profiles:
      - testing
      - e2etest
    networks:
      - mimigma_network

  test:
    build:
      context: ./backend
#    volumes:
#      - ./backend:/code
#      - ./tests:/code/tests
    command: sh -c "sleep 5 && coverage run --rcfile=.coveragerc -m pytest /code/tests --disable-warnings && coverage report -m"
    depends_on:
      - backend
      - db
    profiles:
      - testing
      - unittest
    environment:
      - SQLALCHEMY_SILENCE_UBER_WARNING=1  # Silence SQLAlchemy 2.0 compatibility warning
      - PYTHONPATH=/code
    networks:
      - mimigma_network

networks:
  mimigma_network:
